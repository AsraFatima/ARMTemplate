{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "MangementType": {
            "type": "string",
            "defaultValue": "Citrix Cloud Managed",
            "allowedValues": [
                "Citrix Cloud Managed",
                "Customer Managed"
            ],
            "metadata": {
                "description": "Specifies the type of storage account, if being created."
            }
        },
        "newOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "ImageStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the name of the storage account used for virtual machine disks. This has to be a unique name, up to 24 chars, all lowercase."
            }
        },
        "StorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Specifies the type of storage account, if being created."
            }
        },
        "ImageStoreResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the resource group which should contain the storage account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the Location for the deployment."
            }
        },
        "VirtualNetworkName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the name of the Virtual Network."
            }
        },
        "VirtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Specify the address prefix for the Virtul Network."
            }
        },
        "SubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the name of the Subnet in the Virutal Network."
            }
        },
        "SubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Specify the Subnet Address Prefix for the Virtual Network."
            }
        },
        "VirtualNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the Resource Group  for the Virtual Network."
            }
        },
        "ServicePrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the Application Id of the Service Principal."
            }
        },
        "BuiltInRoleType": {
            "type": "string",
            "defaultValue": "Contributor",
            "allowedValues": [
                "Owner",
                "Contributor",
                "Reader",
                "Virtual Machine Contributor"
            ],
            "metadata": {
                "description": "Specify the Role that needs to be assigned to the Resource Group."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            },
            "defaultValue": "https://raw.githubusercontent.com/AsraFatima/ARMTemplate/master/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "creatingStorageAccountUrl": "[concat(parameters('_artifactsLocation'), 'storageAccount-new', '.json')]",
        "creatingVirtualNetworkUrl": "[concat(parameters('_artifactsLocation'),'VirtualNetwork-',parameters('newOrExisting'),'.json')]",
        "VirtualMachineContributor": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'd73bb868-a0df-4d4d-bd69-98a00b01fccb')]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "scope": "[resourceGroup().id]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('ImageStoreResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [],
            "name": "CreateStorageAccount",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('creatingStorageAccountUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vhdStorageAccount": {
                        "value": "[parameters('ImageStorageAccountName')]"
                    },
                    "vhdStorageType": {
                        "value": "[parameters('StorageType')]"
                    },
                    "vhdStorageGroup": {
                        "value": "[parameters('ImageStoreResourceGroup')]"
                    }
                }
            }

        },
        {
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('VirtualNetworkResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [],
            "name": "CreatingVirtualNetwork",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('creatingVirtualNetworkUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('VirtualNetworkName')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('VirtualNetworkAddressPrefix')]"
                    },
                    "subnetName": {
                        "value": "[parameters('SubnetName')]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('SubnetAddressPrefix')]"
                    }
                }
            }

        },
        {
            "apiVersion": "2014-07-01-preview",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "Assign Permissions",
            "properties": {
                "roleDefinitionId": "[variables(parameters('BuiltInRoleType'))]",
                "principalId": "[parameters('ServicePrincipalId')]",
                "scope": "[variables('scope')]"
            }
        }
    ],
    "outputs": {}
}
