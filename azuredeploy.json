{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "MangementType": {
            "type": "string",
            "defaultValue": "Customer Managed",
            "allowedValues": [
                "Citrix Managed",
                "Customer Managed"
            ],
            "metadata": {
                "description": "Specifies the type of storage account, if being created."
            }
        },
        "StorageAccountnewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "ImageStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the name of the storage account used for virtual machine disks. This has to be a unique name, up to 24 chars, all lowercase."
            }
        },
        "StorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Specifies the type of storage account, if being created."
            }
        },
        "ImageStoreResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the resource group which should contain the storage account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the Location for the deployment."
            }
        },
        "VirtualNetworknewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "VirtualNetworkName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the name of the Virtual Network."
            }
        },
        "VirtualNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the Resource Group  for the Virtual Network."
            }
        },
        "ServicePrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the Application Id of the Service Principal."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            },
            "defaultValue": "https://raw.githubusercontent.com/AsraFatima/ARMTemplate/master/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "assignPermission": {
            "Citrix Managed": {
                "assignPermissionUrl": "[concat(parameters('_artifactsLocation'), 'CitrixManaged', '.json')]",
                "roleDefinition": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "scope": "[subscription().subscriptionId]"
            },
            "Customer Managed": {
                "assignPermissionUrl": "[concat(parameters('_artifactsLocation'), 'CustomerManaged', '.json')]",
                "roleDefinition": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
                "scope": "[resourceGroup().id]"
            }
        },
        "currentPermission": "[variables('assignPermission')[parameters('MangementType')]]",
        "assignPermissionTemplateUrl": "[variables('currentPermission').assignPermissionUrl]",

        "roleDefinitionId": "[variables('currentPermission').roleDefinition]",
        "roleScope": "[variables('currentPermission').scope]",
        "generateGuidTemplateUrl": "[concat(parameters('_artifactsLocation'), 'NewGuid', '.json')]",



        "creatingStorageAccountUrl": "[concat(parameters('_artifactsLocation'), 'storageAccount-new', '.json')]",
        "creatingVirtualNetworkUrl": "[concat(parameters('_artifactsLocation'),'VirtualNetwork-',parameters('VirtualNetworknewOrExisting'),'.json')]",
        "VirtualMachineContributor": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
        "scope": "[resourceGroup().id]"
    },
    "resources": [
        {
            "apiVersion": "2015-01-01",
            "name": "GenerateGuid",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('generateGuidTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('ImageStoreResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [],
            "name": "CreateStorageAccount",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('creatingStorageAccountUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vhdStorageAccount": {
                        "value": "[parameters('ImageStorageAccountName')]"
                    },
                    "vhdStorageType": {
                        "value": "[parameters('StorageType')]"
                    },
                    "vhdStorageGroup": {
                        "value": "[parameters('ImageStoreResourceGroup')]"
                    }
                }
            }

        },
        {
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('VirtualNetworkResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [],
            "name": "CreatingVirtualNetwork",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('creatingVirtualNetworkUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('VirtualNetworkName')]"
                    }
                }
            }

        },

        {
            "apiVersion": "2017-05-10",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "Microsoft.Resources/deployments/GenerateGuid"
            ],
            "name": "AssigningResourcePermissions",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('assignPermissionTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "roleDefinitionId": {
                        "value": "[variables('roleDefinitionId')]"
                    },
                    "principalId": {
                        "value": "[parameters('ServicePrincipalId')]"
                    },
                    "scope": {
                        "value": "[variables('roleScope')]"
                    },
                    "roleAssignmentId": {
                        "value": "[reference('GenerateGuid').outputs.guid.value]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}
